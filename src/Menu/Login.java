package Menu;

import EmpregadosClinica.Medico;
import EmpregadosClinica.Secretaria;
import Sistema.GerenciadorCadastrado;
import Sistema.MedicoCadastrado;
import Sistema.SecretariaCadastrada;
import javax.persistence.EntityManager;
import javax.swing.JOptionPane;

public class Login extends javax.swing.JFrame {
    EntityManager em;
    
    public Login(EntityManager em) {
        initComponents();
        this.em = em;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        credFuncionario = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        Entrar = new javax.swing.JButton();
        ProfissaoEscolhida = new javax.swing.JComboBox<>();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        botaoRegistrar = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Sistema - Saude & Cia");

        jLabel1.setText("CPF/CRM");

        credFuncionario.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        credFuncionario.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                credFuncionarioActionPerformed(evt);
            }
        });

        jLabel2.setText("Profissão:");

        Entrar.setText("Entrar");
        Entrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                EntrarActionPerformed(evt);
            }
        });

        ProfissaoEscolhida.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        ProfissaoEscolhida.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Nenhum", "Médico", "Secretaria", "Gerenciador de Mensagem" }));
        ProfissaoEscolhida.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ProfissaoEscolhidaActionPerformed(evt);
            }
        });

        jLabel4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/imagens/logo.png"))); // NOI18N

        botaoRegistrar.setText("Registrar");
        botaoRegistrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botaoRegistrarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(46, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(botaoRegistrar)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(Entrar))
                        .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(credFuncionario, javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(ProfissaoEscolhida, javax.swing.GroupLayout.Alignment.LEADING, 0, 311, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addGap(59, 59, 59)
                        .addComponent(jLabel4)
                        .addGap(52, 52, 52)))
                .addGap(45, 45, 45))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(33, 33, 33)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel3)
                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(26, 26, 26)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(credFuncionario, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(ProfissaoEscolhida, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(Entrar, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(botaoRegistrar, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(35, 35, 35))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void credFuncionarioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_credFuncionarioActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_credFuncionarioActionPerformed

    private void EntrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_EntrarActionPerformed
        String credenciais = new String();
        credenciais = credFuncionario.getText(); // Obtém a credencial inserida  
        
        if((ProfissaoEscolhida.getSelectedItem()).equals("Nenhum")) {
            JOptionPane.showMessageDialog(null, "Escolha um cargo!", "Cargo não escolhido", JOptionPane.ERROR_MESSAGE);

        }
        
        if((ProfissaoEscolhida.getSelectedItem()).equals("Secretaria")) {
            SecretariaCadastrada secCred = new SecretariaCadastrada(); // Cria um objeto da classe SecretariaCadastrada
            secCred = em.find(SecretariaCadastrada.class, credenciais);
            if(secCred != null){
                Secretaria secLogada = new Secretaria(secCred.getNomeFuncionario(), secCred.getCpf());
                TelaPrincipalSecretaria telaSec = new TelaPrincipalSecretaria(secLogada, em);
                telaSec.setVisible(true);
                this.dispose();
            } else {
                JOptionPane.showMessageDialog(null, "CPF incorreto/não existe.", "Credenciais não encontradas", JOptionPane.ERROR_MESSAGE);
            }
            
    }
        if((ProfissaoEscolhida.getSelectedItem()).equals("Médico")) {
            MedicoCadastrado medicoCred = new MedicoCadastrado(); // Cria um objeto da classe MedicoCadastrado 
                                                                // para armazenar as credencias do médico que será logado
            medicoCred = em.find(MedicoCadastrado.class, credenciais);
            if (medicoCred != null) {
                Medico medicoLogado = new Medico(medicoCred.getNome(), medicoCred.getNumeroDeRegistro(), medicoCred.getEspecialidade(), medicoCred.getNumeroDoConsultorio(), medicoCred.getNumeroAtendidos());
                TelaPrincipalMed telaMed = new TelaPrincipalMed(medicoLogado, em);
                telaMed.setVisible(true);
                this.dispose();
            } else {
                JOptionPane.showMessageDialog(null, "CRM incorreto/não existe.", "Credenciais não encontradas", JOptionPane.ERROR_MESSAGE);
            }
            
        }
    }//GEN-LAST:event_EntrarActionPerformed

    private void ProfissaoEscolhidaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ProfissaoEscolhidaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_ProfissaoEscolhidaActionPerformed

    private void botaoRegistrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botaoRegistrarActionPerformed
        if((ProfissaoEscolhida.getSelectedItem()).equals("Secretaria")) {
            String novaSecretariaCPF = JOptionPane.showInputDialog(null, "Insira o cpf da nova Secretaria: ");
            String novoSecretariaNome = JOptionPane.showInputDialog(null, "Insira o nome da nova Secretaria: ");
            
            SecretariaCadastrada novaSecretaria = new SecretariaCadastrada();
            novaSecretaria.setNomeFuncionario(novoSecretariaNome);
            novaSecretaria.setCpf(novaSecretariaCPF);
            em.getTransaction().begin();
            em.merge(novaSecretaria);
            em.getTransaction().commit();
        }
        if((ProfissaoEscolhida.getSelectedItem()).equals("Médico")) {
            String novoMedicoNome = JOptionPane.showInputDialog(null, "Insira o nome do novo Médico: ");
            String novoMedicoCRM = JOptionPane.showInputDialog(null, "Insira o CRM do novo Médico: ");
            String novoMedicoEspecialidade = JOptionPane.showInputDialog(null, "Insira a Especialidade do novo Médico: ");
            String novoMedicoConsultorio = JOptionPane.showInputDialog(null, "Insira o número do consultório do novo Médico: ");
            MedicoCadastrado novoMedico = new MedicoCadastrado();
            em.getTransaction().begin();
            novoMedico.setNome(novoMedicoNome);
            novoMedico.setNumeroDeRegistro(novoMedicoCRM);
            novoMedico.setEspecialidade(novoMedicoEspecialidade);
            novoMedico.setNumeroDoConsultorio(novoMedicoConsultorio);
            novoMedico.setNumeroAtendidos(0);
            em.merge(novoMedico);
            em.getTransaction().commit();
        }
        if ((ProfissaoEscolhida.getSelectedItem()).equals("Gerenciador de Mensagem")) {
            String novoGmCpf = JOptionPane.showInputDialog(null, "Insira o cpf do Gerenciador de Mensagens: ");
            GerenciadorCadastrado novoGM = new GerenciadorCadastrado();
            novoGM.setCpf(novoGmCpf);
            em.merge(novoGM);
        }
        
    }//GEN-LAST:event_botaoRegistrarActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Entrar;
    private javax.swing.JComboBox<String> ProfissaoEscolhida;
    private javax.swing.JButton botaoRegistrar;
    private javax.swing.JTextField credFuncionario;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    // End of variables declaration//GEN-END:variables
}
